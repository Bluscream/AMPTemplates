[
    {
        "UpdateStageName":"Setup Directory Creation",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"CreateDirectory",
        "UpdateSourceArgs":"{{$FullRootDir}}setup",
        "OneShot":true
    },
    {
        "UpdateStageName":"RAGE:MP Download",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"Executable",
        "UpdateSourceData":"powershell.exe",
        "UpdateSourceArgs": "-NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -Command \"$ProgressPreference='SilentlyContinue'; cd ragemp/server; $baseURL = 'https://cdn.rage.mp/updater/prerelease/'; $xmlURL = 'https://cdn.rage.mp/updater/prerelease_server/data.xml'; $xmlContent = Invoke-WebRequest -UseBasicParsing -Uri $xmlURL; $xml = New-Object System.Xml.XmlDocument; $xml.LoadXml($xmlContent.Content); foreach ($file in $xml.SelectNodes(\\\"//file[contains(text(), 'server-files\\\\')]\\\")) { $filePath = $file.'#text'; if ($filePath -match '^server-files\\\\linux_x64\\.tar\\.gz$') { continue; } $downloadURL = $baseURL + ($filePath -replace '\\\\', '/'); $relativeFilePath = $filePath -replace '^server-files\\\\', ''; $localFilePath = $relativeFilePath; $localDir = [System.IO.Path]::GetDirectoryName($localFilePath); if (-not (Test-Path -Path $localDir)) { New-Item -ItemType Directory -Path $localDir -Force }; Invoke-WebRequest -UseBasicParsing -Uri $downloadURL -OutFile $localFilePath; }\""
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"RAGE:MP Download",
        "UpdateSourcePlatform":"Linux",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c 'cd ragemp/server && wget -q -N https://cdn.rage.mp/updater/prerelease/server-files/linux_x64.tar.gz && tar -xzf linux_x64.tar.gz --strip-components=1 && rm -f linux_x64.tar.gz >/dev/null 2>&1'",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"Resources Directory Creation",
        "UpdateSourcePlatform":"All",
        "UpdateSource":"CreateDirectory",
        "UpdateSourceArgs":"{{$FullBaseDir}}dotnet/resources"
    },
    {
        "UpdateStageName":"Config File Download",
        "UpdateSourcePlatform":"All",
        "UpdateSource":"FetchURL",
        "UpdateSourceData":"https://raw.githubusercontent.com/Greelan/AMPTemplates/dev/ragempconf.json",
        "UpdateSourceTarget":"{{$FullBaseDir}}",
        "UpdateSourceArgs":"conf.json",
        "OverwriteExistingFiles":false
    }
]
