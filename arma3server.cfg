// server.cfg

// This file is automatically generated by AMP. All uncommented settings are controlled by AMP.
// If you wish to configure other settings (including those that are commented), you can do so manually
// in a separate configuration file in the same directory called "custom.cfg".
// The separate configuration file will ensure that your settings are not overwritten by a later update.

// Full information on settings is available at https://community.bistudio.com/wiki/Arma_3:_Server_Config_File

// GLOBAL SETTINGS
hostname = "{{hostname}}";
password = "{{password}}";
passwordAdmin = "{{passwordAdmin}}";
serverCommandPassword = "{{serverCommandPassword}}";
admins[] = {{admins}};
//headlessClients[] = {};
//localClient[] = {};
logFile = "server_console.log";

// WELCOME MESSAGE ("message of the day")
motd[] = { {{motd}} };
motdInterval = {{motdInterval}};

// JOINING RULES
maxPlayers = {{maxPlayers}};
kickDuplicate = {{kickDuplicate}};
verifySignatures = {{verifySignatures}};
allowedFilePatching = {{allowedFilePatching}};
filePatchingExceptions[] = { {{filePatchingExceptions}} };
requiredBuild = {{requiredBuild}};
loopback = {{loopback}};
upnp = {{upnp}};
skipLobby = {{skipLobby}};

// VOTING
voteMissionPlayers = {{voteMissionPlayers}};
voteThreshold = {{voteThreshold}};
//allowedVoteCmds[] = { { "kick", false, false, 0.75 } };
//allowedVotedAdminCmds[] = { { "mission", true, true } };

// INGAME SETTINGS
forceRotorLibSimulation = {{forceRotorLibSimulation}};
disableVoN = {{disableVoN}};
vonCodec = {{vonCodec}};
vonCodecQuality = {{vonCodecQuality}};
persistent = {{persistent}};
timeStampFormat = "{{timeStampFormat}}";
BattlEye = 1;
allowedLoadFileExtensions[] = { {{allowedLoadFileExtensions}} };
allowedPreprocessFileExtensions[] = { {{allowedPreprocessFileExtensions}} ;
allowedHTMLLoadExtensions[] = { {{allowedHTMLLoadExtensions}} };
//allowedHTMLLoadURIs[] = {};
enablePlayerDiag = {{enablePlayerDiag}};
drawingInMap = {{drawingInMap}};
allowProfileGlasses = {{allowProfileGlasses}};
forcedDifficulty = "{{forcedDifficulty}}";

// TIMEOUTS
disconnectTimeout = {{disconnectTimeout}};
maxDesync = {{maxDesync}};
maxPing = {{maxPing}};
maxPacketLoss = {{maxPacketLoss}};
kickClientsOnSlowNetwork[] = { {{kickPing}}, {{kickLoss}}, {{kickDesync}}, {{kickTimeout}} }; 
kickTimeout[] = { { 0, {{kickManual}} }, { 1, {{kickConnectivity}} }, { 2, {{kickBattlEye}} }, { 3, {{kickHarmless}} } };
votingTimeOut[] = { {{votingTimeOut}} };	
roleTimeOut[] = { {{roleTimeOut}} };
briefingTimeOut[] = { {{briefingTimeOut}} };	
debriefingTimeOut[] = { {{debriefingTimeOut}} };
lobbyIdleTimeout = {{lobbyIdleTimeout}};
armaUnitsTimeout = {{armaUnitsTimeout}};

// SCRIPTING ISSUES
onUserConnected = "{{onUserConnected}}";
onUserDisconnected = "{{onUserDisconnected}}";
doubleIdDetected = "{{doubleIdDetected}}";
onUserKicked = "{{onUserKicked}}";

// SIGNATURE VERIFICATION
onUnsignedData = "{{onUnsignedData}}";
onHackedData = "{{onHackedData}}";
onDifferentData = "{{onDifferentData}}";

// MISSIONS CYCLE (see below)
autoSelectMission = {{autoSelectMission}};
randomMissionOrder = {{randomMissionOrder}};
//class Missions {};			// An empty Missions class means there will be no mission rotation
//missionWhitelist[] = {};	// An empty whitelist means there is no restriction on what missions are available

// OTHER OPTIONS
statisticsEnabled = {{statisticsEnabled}};
callExtReportLimit = {{callExtReportLimit}};
//disableChannels[] = {};
zeusCompositionScriptLevel = {{zeusCompositionScriptLevel}};
steamProtocolMaxDataSize = {{steamProtocolMaxDataSize}};
class AdvancedOptions
{
	LogObjectNotFound = {{LogObjectNotFound}};
	SkipDescriptionParsing = {{SkipDescriptionParsing}};
	ignoreMissionLoadErrors = {{ignoreMissionLoadErrors}};
    queueSizeLogG = {{queueSizeLogG}};
};
