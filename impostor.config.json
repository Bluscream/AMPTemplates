[
    {
        "Category": "Server Settings",
        "Description": "",
        "DisplayName": "Public IP",
        "EnumValues": {},
        "FieldName": "$ExternalIP",
        "Hidden": true,
        "IncludeInCommandLine": false,
        "InputType": "text",
        "IsFlagArgument": false,
        "Keywords": "",
        "ParamFieldName": "$.Server.PublicIp"
    },
    {
        "Category": "Server Settings",
        "Description": "",
        "DisplayName": "Public Port",
        "EnumValues": {},
        "FieldName": "$ServerPort",
        "Hidden": true,
        "IncludeInCommandLine": false,
        "InputType": "number",
        "IsFlagArgument": false,
        "Keywords": "",
        "ParamFieldName": "$.Server.PublicPort"
    },
    {
        "Category": "Server Settings",
        "Description": "",
        "DisplayName": "Listen Port",
        "EnumValues": {},
        "FieldName": "$ServerPort",
        "Hidden": true,
        "IncludeInCommandLine": false,
        "InputType": "number",
        "IsFlagArgument": false,
        "Keywords": "",
        "ParamFieldName": "$.Server.ListenPort"
    },
    {
        "Category": "Server Settings",
        "Description": "",
        "DisplayName": "HTTP Matchmaking Port",
        "EnumValues": {},
        "FieldName": "$ServerPort",
        "Hidden": true,
        "IncludeInCommandLine": false,
        "InputType": "number",
        "IsFlagArgument": false,
        "Keywords": "",
        "ParamFieldName": "$.HttpServer.ListenPort"
    },
    {
        "Category": "Server Settings",
        "Description": "",
        "DisplayName": "IP Binding",
        "EnumValues": {},
        "FieldName": "$ApplicationIPBinding",
        "Hidden": true,
        "IncludeInCommandLine": false,
        "InputType": "text",
        "IsFlagArgument": false,
        "Keywords": "",
        "ParamFieldName": "$.Server.ListenIp"
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "Release",
        "Description": "Sets the build stream for the server - either the mainline release stream, or the nightly (CI) stream. The Server Version also needs to be set. Back up configuration and update the server!",
        "DisplayName": "Build Stream",
        "EnumValues": {
            "Nightly": "Nightly",
            "Release": "Mainline (Default)"
        },
        "FieldName": "BuildStream",
        "IncludeInCommandLine": false,
        "InputType": "enum",
        "IsFlagArgument": false,
        "Keywords": "build,stream",
        "ParamFieldName": "BuildStream"
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "1.9.1",
        "Description": "Sets the server version (either a [release](https://github.com/Impostor/Impostor/releases) version or a [nightly](https://nightly.link/Impostor/Impostor/workflows/ci/master) version) to install. For nightly, you must include the build number, such as \"1.9.1-ci.814\". Update the server after changing this setting",
        "DisplayName": "Server Version",
        "EnumValues": {},
        "FieldName": "ServerVersion",
        "IncludeInCommandLine": false,
        "InputType": "text",
        "IsFlagArgument": false,
        "Keywords": "server,version",
        "ParamFieldName": "ServerVersion",
        "Placeholder": "1.9.1 | 1.9.1-ci.814",
        "Required": true
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "8.0.4",
        "Description": "Sets the ASP.NET Core [8.0](https://dotnet.microsoft.com/en-us/download/dotnet/8.0) or [7.0](https://dotnet.microsoft.com/en-us/download/dotnet/7.0) version to install. Use 8.0 for Impostor v1.9.0+. Update the server after changing this setting",
        "DisplayName": "Dotnet Version",
        "EnumValues": {},
        "FieldName": "DotnetVersion",
        "IncludeInCommandLine": false,
        "InputType": "text",
        "IsFlagArgument": false,
        "Keywords": "dotnet,version",
        "ParamFieldName": "DotnetVersion",
        "Placeholder": "8.0.4",
        "Required": true
    },
    {
        "Category": "Server Settings",
        "Description": "To connect to the server, players must [configure their Among Us client](https://impostor.github.io/Impostor/). [HTTP matchmaking](https://github.com/Impostor/Impostor/blob/master/docs/Http-server.md) is also required. Impostor v1.9.0+ has the HTTP matchmaking server built-in, while for earlier versions the HTTP Plugin is required",
        "DisplayName": "Client and HTTP Matchmaking Configuration",
        "EnumValues": {},
        "FieldName": "",
        "IncludeInCommandLine": false,
        "InputType": "hidden",
        "IsFlagArgument": false,
        "Keywords": "client,configuration,http,matchmaking,plugin",
        "ParamFieldName": ""
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "0.0.0.0",
        "Description": "Sets the binding of the HTTP matchmaking server. Use 0.0.0.0 if clients will connect to the HTTP server directly. Otherwise you can use 127.0.0.1 or a local IP on the host, as appropriate, if using a reverse proxy for the plugin server traffic (preferred)",
        "DisplayName": "HTTP Matchmaking Server Binding",
        "EnumValues": {},
        "FieldName": "HttpServerListenIp",
        "IncludeInCommandLine": false,
        "InputType": "text",
        "IsFlagArgument": false,
        "Keywords": "http,matchmaking,server,binding,listenip",
        "ParamFieldName": "$.HttpServer.ListenIp",
        "Placeholder": "0.0.0.0"
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "false",
        "Description": "If enabled, the [HTTP Plugin](https://github.com/Impostor/Impostor.Http#impostorhttp) will be installed when the server is updated. DO NOT enable this if using Impostor v1.9.0+",
        "DisplayName": "Install HTTP Plugin",
        "EnumValues": {
            "False": "false",
            "True": "true"
        },
        "FieldName": "InstallHttpPlugin",
        "IncludeInCommandLine": false,
        "InputType": "checkbox",
        "IsFlagArgument": false,
        "Keywords": "http,matchmaking,plugin,install",
        "ParamFieldName": "InstallHttpPlugin"
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "0.5.0",
        "Description": "Sets the [Impostor.HTTP plugin version](https://github.com/Impostor/Impostor.Http/releases) to install, if Install HTTP Plugin is enabled",
        "DisplayName": "HTTP Plugin Version",
        "EnumValues": {},
        "FieldName": "HttpPluginVersion",
        "IncludeInCommandLine": false,
        "InputType": "text",
        "IsFlagArgument": false,
        "Keywords": "http,matchmaking,plugin,version",
        "ParamFieldName": "HttpPluginVersion",
        "Placeholder": "0.5.0",
        "Required": true
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "false",
        "Description": "If set, the Impostor.Http plugin server (if used) will use its own HTTPS (encrypted HTTP) rather than plain HTTP. Requires the HTTP Matchmaking Plugin Certificate Path to be set. Using a reverse proxy to provide HTTPS is preferred instead of using this setting. Note: HTTPS is required for mobile devices to connect",
        "DisplayName": "Enable HTTPS For HTTP Matchmaking Plugin",
        "EnumValues": {
            "False": "false",
            "True": "true"
        },
        "FieldName": "HttpServerUseHttps",
        "IncludeInCommandLine": false,
        "InputType": "checkbox",
        "IsFlagArgument": false,
        "Keywords": "http,matchmaking,plugin,https,secure,usehttps",
        "ParamFieldName": "$.HttpServer.UseHttps"
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "",
        "Description": "Sets the path to an SSL certificate (in PFX format) to enable the Impostor.Http plugin server (if used) to use its own HTTPS",
        "DisplayName": "HTTP Matchmaking Plugin Certificate Path",
        "EnumValues": {},
        "FieldName": "HttpServerCertificatePath",
        "IncludeInCommandLine": false,
        "InputType": "text",
        "IsFlagArgument": false,
        "Keywords": "http,matchmaking,plugin,https,secure,certificate,path,certificatepath",
        "ParamFieldName": "$.HttpServer.CertificatePath"
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "true",
        "Description": "If set, anticheat will be enabled",
        "DisplayName": "Enable Anticheat",
        "EnumValues": {
            "False": "false",
            "True": "true"
        },
        "FieldName": "AntiCheat_Enabled",
        "IncludeInCommandLine": false,
        "InputType": "checkbox",
        "IsFlagArgument": false,
        "Keywords": "anti,cheat",
        "ParamFieldName": "$.AntiCheat.Enabled"
    },
    {
        "Category": "Server Settings",
        "DefaultValue": "true",
        "Description": "If enabled, anticheat will ban a hacking player from the server rather than just kicking them. The banned player will not be able to rejoin that game",
        "DisplayName": "Ban IP",
        "EnumValues": {
            "False": "false",
            "True": "true"
        },
        "FieldName": "AntiCheat_BanIpFromGame",
        "IncludeInCommandLine": false,
        "InputType": "checkbox",
        "IsFlagArgument": false,
        "Keywords": "anti,cheat,ban",
        "ParamFieldName": "$.AntiCheat.BanIpFromGame"
    }
]